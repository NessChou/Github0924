//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 原始程式碼已由 Microsoft.VSDesigner 自動產生，版本 4.0.30319.42000。
// 
#pragma warning disable 1591

namespace ACME.Service {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebService1Soap", Namespace="http://tempuri.org/")]
    public partial class WebService1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDEPT_NOOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllTablesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTableDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTableDataPackOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDEPT_DSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEMPDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEMPDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetDataObjectsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebService1() {
            this.Url = global::ACME.Properties.Settings.Default.WindowsApplication1_Service_WebService1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event GetDEPT_NOCompletedEventHandler GetDEPT_NOCompleted;
        
        /// <remarks/>
        public event GetDataCompletedEventHandler GetDataCompleted;
        
        /// <remarks/>
        public event CheckUserCompletedEventHandler CheckUserCompleted;
        
        /// <remarks/>
        public event GetAllTablesCompletedEventHandler GetAllTablesCompleted;
        
        /// <remarks/>
        public event GetTableDataCompletedEventHandler GetTableDataCompleted;
        
        /// <remarks/>
        public event GetTableDataPackCompletedEventHandler GetTableDataPackCompleted;
        
        /// <remarks/>
        public event GetDEPT_DSCompletedEventHandler GetDEPT_DSCompleted;
        
        /// <remarks/>
        public event GetEMPDataCompletedEventHandler GetEMPDataCompleted;
        
        /// <remarks/>
        public event UpdateEMPDataCompletedEventHandler UpdateEMPDataCompleted;
        
        /// <remarks/>
        public event SetDataObjectsCompletedEventHandler SetDataObjectsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDEPT_NO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDEPT_NO(string DEPT_NO) {
            object[] results = this.Invoke("GetDEPT_NO", new object[] {
                        DEPT_NO});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDEPT_NOAsync(string DEPT_NO) {
            this.GetDEPT_NOAsync(DEPT_NO, null);
        }
        
        /// <remarks/>
        public void GetDEPT_NOAsync(string DEPT_NO, object userState) {
            if ((this.GetDEPT_NOOperationCompleted == null)) {
                this.GetDEPT_NOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDEPT_NOOperationCompleted);
            }
            this.InvokeAsync("GetDEPT_NO", new object[] {
                        DEPT_NO}, this.GetDEPT_NOOperationCompleted, userState);
        }
        
        private void OnGetDEPT_NOOperationCompleted(object arg) {
            if ((this.GetDEPT_NOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDEPT_NOCompleted(this, new GetDEPT_NOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetData(string LoginID, string Pwd, string other) {
            object[] results = this.Invoke("GetData", new object[] {
                        LoginID,
                        Pwd,
                        other});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataAsync(string LoginID, string Pwd, string other) {
            this.GetDataAsync(LoginID, Pwd, other, null);
        }
        
        /// <remarks/>
        public void GetDataAsync(string LoginID, string Pwd, string other, object userState) {
            if ((this.GetDataOperationCompleted == null)) {
                this.GetDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataOperationCompleted);
            }
            this.InvokeAsync("GetData", new object[] {
                        LoginID,
                        Pwd,
                        other}, this.GetDataOperationCompleted, userState);
        }
        
        private void OnGetDataOperationCompleted(object arg) {
            if ((this.GetDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataCompleted(this, new GetDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CheckUser(string LoginID, string Pwd) {
            object[] results = this.Invoke("CheckUser", new object[] {
                        LoginID,
                        Pwd});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CheckUserAsync(string LoginID, string Pwd) {
            this.CheckUserAsync(LoginID, Pwd, null);
        }
        
        /// <remarks/>
        public void CheckUserAsync(string LoginID, string Pwd, object userState) {
            if ((this.CheckUserOperationCompleted == null)) {
                this.CheckUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckUserOperationCompleted);
            }
            this.InvokeAsync("CheckUser", new object[] {
                        LoginID,
                        Pwd}, this.CheckUserOperationCompleted, userState);
        }
        
        private void OnCheckUserOperationCompleted(object arg) {
            if ((this.CheckUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckUserCompleted(this, new CheckUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllTables", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllTables(string LoginID, string Pwd, string other) {
            object[] results = this.Invoke("GetAllTables", new object[] {
                        LoginID,
                        Pwd,
                        other});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllTablesAsync(string LoginID, string Pwd, string other) {
            this.GetAllTablesAsync(LoginID, Pwd, other, null);
        }
        
        /// <remarks/>
        public void GetAllTablesAsync(string LoginID, string Pwd, string other, object userState) {
            if ((this.GetAllTablesOperationCompleted == null)) {
                this.GetAllTablesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllTablesOperationCompleted);
            }
            this.InvokeAsync("GetAllTables", new object[] {
                        LoginID,
                        Pwd,
                        other}, this.GetAllTablesOperationCompleted, userState);
        }
        
        private void OnGetAllTablesOperationCompleted(object arg) {
            if ((this.GetAllTablesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllTablesCompleted(this, new GetAllTablesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTableData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTableData(string LoginID, string Pwd, string SqlScript, string TableName) {
            object[] results = this.Invoke("GetTableData", new object[] {
                        LoginID,
                        Pwd,
                        SqlScript,
                        TableName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTableDataAsync(string LoginID, string Pwd, string SqlScript, string TableName) {
            this.GetTableDataAsync(LoginID, Pwd, SqlScript, TableName, null);
        }
        
        /// <remarks/>
        public void GetTableDataAsync(string LoginID, string Pwd, string SqlScript, string TableName, object userState) {
            if ((this.GetTableDataOperationCompleted == null)) {
                this.GetTableDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTableDataOperationCompleted);
            }
            this.InvokeAsync("GetTableData", new object[] {
                        LoginID,
                        Pwd,
                        SqlScript,
                        TableName}, this.GetTableDataOperationCompleted, userState);
        }
        
        private void OnGetTableDataOperationCompleted(object arg) {
            if ((this.GetTableDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTableDataCompleted(this, new GetTableDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTableDataPack", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTableDataPack(string LoginID, string Pwd, string SqlScript, int start, int max, string TableName) {
            object[] results = this.Invoke("GetTableDataPack", new object[] {
                        LoginID,
                        Pwd,
                        SqlScript,
                        start,
                        max,
                        TableName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTableDataPackAsync(string LoginID, string Pwd, string SqlScript, int start, int max, string TableName) {
            this.GetTableDataPackAsync(LoginID, Pwd, SqlScript, start, max, TableName, null);
        }
        
        /// <remarks/>
        public void GetTableDataPackAsync(string LoginID, string Pwd, string SqlScript, int start, int max, string TableName, object userState) {
            if ((this.GetTableDataPackOperationCompleted == null)) {
                this.GetTableDataPackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTableDataPackOperationCompleted);
            }
            this.InvokeAsync("GetTableDataPack", new object[] {
                        LoginID,
                        Pwd,
                        SqlScript,
                        start,
                        max,
                        TableName}, this.GetTableDataPackOperationCompleted, userState);
        }
        
        private void OnGetTableDataPackOperationCompleted(object arg) {
            if ((this.GetTableDataPackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTableDataPackCompleted(this, new GetTableDataPackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDEPT_DS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDEPT_DS(string LoginID, string Pwd, string Other) {
            object[] results = this.Invoke("GetDEPT_DS", new object[] {
                        LoginID,
                        Pwd,
                        Other});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDEPT_DSAsync(string LoginID, string Pwd, string Other) {
            this.GetDEPT_DSAsync(LoginID, Pwd, Other, null);
        }
        
        /// <remarks/>
        public void GetDEPT_DSAsync(string LoginID, string Pwd, string Other, object userState) {
            if ((this.GetDEPT_DSOperationCompleted == null)) {
                this.GetDEPT_DSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDEPT_DSOperationCompleted);
            }
            this.InvokeAsync("GetDEPT_DS", new object[] {
                        LoginID,
                        Pwd,
                        Other}, this.GetDEPT_DSOperationCompleted, userState);
        }
        
        private void OnGetDEPT_DSOperationCompleted(object arg) {
            if ((this.GetDEPT_DSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDEPT_DSCompleted(this, new GetDEPT_DSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEMPData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetEMPData(string LoginID, string Pwd, string other) {
            object[] results = this.Invoke("GetEMPData", new object[] {
                        LoginID,
                        Pwd,
                        other});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetEMPDataAsync(string LoginID, string Pwd, string other) {
            this.GetEMPDataAsync(LoginID, Pwd, other, null);
        }
        
        /// <remarks/>
        public void GetEMPDataAsync(string LoginID, string Pwd, string other, object userState) {
            if ((this.GetEMPDataOperationCompleted == null)) {
                this.GetEMPDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEMPDataOperationCompleted);
            }
            this.InvokeAsync("GetEMPData", new object[] {
                        LoginID,
                        Pwd,
                        other}, this.GetEMPDataOperationCompleted, userState);
        }
        
        private void OnGetEMPDataOperationCompleted(object arg) {
            if ((this.GetEMPDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEMPDataCompleted(this, new GetEMPDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateEMPData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateEMPData(string LoginID, string Pwd, System.Data.DataSet ds) {
            object[] results = this.Invoke("UpdateEMPData", new object[] {
                        LoginID,
                        Pwd,
                        ds});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateEMPDataAsync(string LoginID, string Pwd, System.Data.DataSet ds) {
            this.UpdateEMPDataAsync(LoginID, Pwd, ds, null);
        }
        
        /// <remarks/>
        public void UpdateEMPDataAsync(string LoginID, string Pwd, System.Data.DataSet ds, object userState) {
            if ((this.UpdateEMPDataOperationCompleted == null)) {
                this.UpdateEMPDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEMPDataOperationCompleted);
            }
            this.InvokeAsync("UpdateEMPData", new object[] {
                        LoginID,
                        Pwd,
                        ds}, this.UpdateEMPDataOperationCompleted, userState);
        }
        
        private void OnUpdateEMPDataOperationCompleted(object arg) {
            if ((this.UpdateEMPDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEMPDataCompleted(this, new UpdateEMPDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetDataObjects", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetDataObjects(string LoginID, string Pwd, string sqlQuery, System.Data.DataSet ds, string TableName) {
            object[] results = this.Invoke("SetDataObjects", new object[] {
                        LoginID,
                        Pwd,
                        sqlQuery,
                        ds,
                        TableName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetDataObjectsAsync(string LoginID, string Pwd, string sqlQuery, System.Data.DataSet ds, string TableName) {
            this.SetDataObjectsAsync(LoginID, Pwd, sqlQuery, ds, TableName, null);
        }
        
        /// <remarks/>
        public void SetDataObjectsAsync(string LoginID, string Pwd, string sqlQuery, System.Data.DataSet ds, string TableName, object userState) {
            if ((this.SetDataObjectsOperationCompleted == null)) {
                this.SetDataObjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetDataObjectsOperationCompleted);
            }
            this.InvokeAsync("SetDataObjects", new object[] {
                        LoginID,
                        Pwd,
                        sqlQuery,
                        ds,
                        TableName}, this.SetDataObjectsOperationCompleted, userState);
        }
        
        private void OnSetDataObjectsOperationCompleted(object arg) {
            if ((this.SetDataObjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetDataObjectsCompleted(this, new SetDataObjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetDEPT_NOCompletedEventHandler(object sender, GetDEPT_NOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDEPT_NOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDEPT_NOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetDataCompletedEventHandler(object sender, GetDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CheckUserCompletedEventHandler(object sender, CheckUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetAllTablesCompletedEventHandler(object sender, GetAllTablesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllTablesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllTablesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetTableDataCompletedEventHandler(object sender, GetTableDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTableDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTableDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetTableDataPackCompletedEventHandler(object sender, GetTableDataPackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTableDataPackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTableDataPackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetDEPT_DSCompletedEventHandler(object sender, GetDEPT_DSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDEPT_DSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDEPT_DSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetEMPDataCompletedEventHandler(object sender, GetEMPDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEMPDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEMPDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpdateEMPDataCompletedEventHandler(object sender, UpdateEMPDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateEMPDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateEMPDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SetDataObjectsCompletedEventHandler(object sender, SetDataObjectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetDataObjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetDataObjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591